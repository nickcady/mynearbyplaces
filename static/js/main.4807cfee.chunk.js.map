{"version":3,"sources":["ServerInterface/server.js","Components/Home.js","Components/AddPlace.js","Components/AddReview.js","App.js","reportWebVitals.js","index.js"],"names":["API","server","addPlace","name","category","city","state","fetch","method","headers","body","JSON","stringify","then","x","console","log","catch","e","getReviews","placeid","json","addReview","review","search","searchTerm","location","Home","props","searchSubmit","event","searchType","results","i","id","y","reviews","length","setState","entered","onOptionChange","val","target","value","preventDefault","onSearchChange","removeEntry","p","place","Container","className","Row","Form","Group","Control","as","size","selector","onChange","type","placeholder","Button","onClick","renderResults","Col","map","undefined","r","variant","this","to","pathname","React","Component","AddPlace","onSubmit","done","onCancel","onInputChange","inputform","controlId","Label","AddReview","reviewForm","rows","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4807cfee.chunk.js","sourcesContent":["let API = \"https://nickcady-mynearbyplaces.herokuapp.com\";\n\nlet search = (searchTerm, location) => {\n    return fetch(API + \"/search/\" + searchTerm + \"/\" + location).then(x => x.json());\n}\n\nlet getReviews = (placeid) => {\n    return fetch(API + \"/reviews/\" + placeid).then(x => x.json());\n}\n\nlet addPlace = (name, category, city, state) => {\n    return fetch(API + \"/place\", {\n        method: \"POST\", \n        headers: { \n            \"Content-Type\": \"application/json\" \n        }, body: JSON.stringify({ \n            name: name, \n            category: category,\n            city: city,\n            state: state\n        })\n    }).then(x => console.log(x)).catch(e => console.log(e));\n}\n\nlet addReview = (placeid, review) => {\n    return fetch(API + \"/review\", {\n        method: \"POST\", \n        headers: { \n            \"Content-Type\": \"application/json\" \n        }, body: JSON.stringify({ \n            placeid: placeid, \n            review: review})\n    }).then(x => console.log(x)).catch(e => console.log(e));\n}\n\nlet server = {addPlace: addPlace, getReviews: getReviews, addReview: addReview, search: search};\n\nexport default server;","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport server from '../ServerInterface/server.js'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nimport './Home.css';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reviews: [],\n            results: [],\n            searchType: 'city',\n            searchTerm: '',\n            entered: false,\n            review: false,\n            place: ''\n        };\n    }\n\n    searchSubmit = (event) => {\n        let { searchType, searchTerm } = this.state;\n        server.search(searchType, searchTerm).then(results => {\n            for (let i = 0; i < results.length; i++) {\n                server.getReviews(results[i].id).then(y => results[i].reviews = y);\n            }\n            this.setState({ results: results, entered: true })\n        })\n    }\n\n    onOptionChange = (event) => {\n        let val = event.target.value;\n        this.setState({ searchType: val });\n        event.preventDefault();\n    }\n\n    onSearchChange = (event) => {\n        let val = event.target.value;\n        this.setState({ searchTerm: val });\n        event.preventDefault();\n    }\n\n    removeEntry = (p, e) => {\n        console.log(p.reviews);\n    }\n\n    addReview = (p, e) => {\n        this.setState({ review: true, place: p });\n    }\n\n    body = () => {\n        return (\n            <Container className='search'>\n                <Row>\n                    <Form.Group>\n                        <Form.Control as=\"select\" size=\"lg\" value={this.state.selector} onChange={this.onOptionChange}>\n                            <option value='city'>City</option>\n                            <option value='state'>State</option>\n                        </Form.Control>\n                        <Form.Control type=\"text\" placeholder=\"search...\" value={this.state.searchTerm}\n                            onChange={this.onSearchChange} />\n                        <Button as='input' type='submit' value='Submit' onClick={this.searchSubmit} />\n                    </Form.Group>\n                </Row>\n            </Container>\n        );\n    }\n\n    renderResults = () => {\n        let { results } = this.state;\n        // for (let i = 0; i < results.length; i++) {\n        //     console.log(results[i]);\n        // }\n        // console.log(results);\n        return (\n            <Container className='result'>\n                <Col>\n                    {results.length > 0 ?\n                        <Container>\n                            {results.map((p, i) =>\n                                <Container key={i} className='resultbox'>\n                                    <label>{(i + 1) + ': ' + p.place}</label>\n                                    <br />\n                                    <label>{p.city + \", \" + p.state}</label>\n                                    <br />\n                                    <label>{p.category}</label>\n                                    <br />\n                                    {(p.reviews !== undefined && p.reviews.length > 0) ?\n                                        <Container>\n                                            <label>Reviews:</label>\n                                            <br />\n                                            <Container>\n                                                {p.reviews.map((r, x) =>\n                                                    <Container className='reviews' key={x}>\n                                                        <label>{'    \"' + r + '\"'}</label>\n                                                        <br />\n                                                    </Container>\n                                                )}\n                                            </Container>\n                                        </Container>\n                                        : ''}\n                                    <Row className='buttons'>\n                                        <Button variant='danger' onClick={(e) => this.removeEntry(p, e)}>Remove</Button>\n                                        <Button variant='primary' onClick={(e) => this.addReview(p, e)}>Add Review</Button>\n                                    </Row>\n                                </Container>\n                            )}\n                        </Container>\n                        : 'Sorry, no results for that search'}\n                </Col>\n            </Container>\n        );\n    }\n\n    render() {\n        let { review, place } = this.state;\n        if (review) {\n            return (<Redirect to={{ pathname: \"/addreview\", state: { place: place } }} />);\n        }\n        return (\n            <Container>\n                <Container className=\"addplace\">\n                    <Link to=\"/addplace\">Add Company</Link>\n                </Container>\n                <Container className='welcome'>\n                    <Container className='near'>Welcome to mynearbyplaces!</Container>\n                    {this.body()}\n                    {this.state.entered ? this.renderResults() : ''}\n                </Container>\n            </Container>\n        )\n    }\n\n}\n\nexport default Home;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport server from '../ServerInterface/server.js'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport  \"./AddPlace.css\";\n\nclass AddPlace extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            category: '',\n            city: '',\n            state: '',\n            done: false\n        };\n    }\n\n    onSubmit = (event) => {\n        let { name, category, city, state } = this.state;\n        server.addPlace(name, category, city, state);\n        event.preventDefault();\n        this.setState({done: true});\n    }\n\n    onCancel = (event) => {\n        event.preventDefault();\n        this.setState({done: true});\n    }\n\n\n    onInputChange = (event) => {\n        let value = event.target.value;\n        let name = event.target.id;\n        this.setState({[name]: value});\n    }\n\n    inputform = () => {\n        return (\n            <Container className='addform'>\n                <Row>\n                    <Col><Form>\n                        <label className='title'>Add a Business</label>\n                        <Form.Group controlId=\"name\">\n                            <Form.Label>Name:</Form.Label>\n                            <Form.Control size=\"lg\" type=\"text\" value={this.state.name}\n                                onChange={this.onInputChange} placeholder=\"Enter Name\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"category\">\n                            <Form.Label>Category:</Form.Label>\n                            <Form.Control size=\"lg\" type=\"text\" value={this.state.category}\n                                onChange={this.onInputChange} placeholder=\"Enter Category\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"city\">\n                            <Form.Label>City:</Form.Label>\n                            <Form.Control size=\"lg\" type=\"text\" value={this.state.city}\n                                onChange={this.onInputChange} placeholder=\"Enter City\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"state\">\n                            <Form.Label>State:</Form.Label>\n                            <Form.Control size=\"lg\" type=\"text\" value={this.state.state}\n                                onChange={this.onInputChange} placeholder=\"Enter State\"/>\n                        </Form.Group>\n                        <Row className='buttons'>\n                            <Button variant=\"secondary\" onClick={this.onCancel}>Cancel</Button>\n                            <Button variant=\"primary\" onClick={this.onSubmit}>Add Business</Button>\n                        </Row>\n                    </Form></Col>\n                </Row>\n            </Container>\n        );\n    }\n\n    render() {\n        let from = { pathname: '/mynearbyplaces'};\n        if (this.state.done) {\n            return (<Redirect to={from}/>);\n        }\n        return (\n                this.inputform()\n        );\n    }\n\n}\n\nexport default AddPlace;","import React from 'react';\nimport {  Redirect } from 'react-router-dom';\nimport server from '../ServerInterface/server.js'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './AddReview.css'\n\nclass AddReview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            entered: false,\n            review: '',\n            done: false\n        };\n    }\n\n    onSubmit = (place, event) => {\n        let { review } = this.state;\n        server.addReview(place.id, review);\n        event.preventDefault();\n        this.setState({done: true});\n    }\n\n    onCancel = (event) => {\n        event.preventDefault();\n        this.setState({done: true});\n    }\n\n    onInputChange = (event) => {\n        let value = event.target.value;\n        this.setState({review: value});\n    }\n\n    reviewForm = (place) => {\n        return (\n            <Container className='addform'>\n                <Row>\n                    <Col><Form>\n                        <label>Enter a review for {place.name}</label>\n                        <Form.Group controlId=\"review\">\n                        <Form.Control className='textfield' as=\"textarea\" rows={3} value={this.state.review}\n                                onChange={this.onInputChange} placeholder=\"Enter Review...\"/>\n                        </Form.Group>\n\n                        <Row className='buttons'>\n                            <Button variant=\"secondary\" onClick={this.onCancel}>Cancel</Button>\n                            <Button variant=\"primary\" onClick={(e) => this.onSubmit(place, e)}>Add Review</Button>\n                        </Row>\n                    </Form></Col>\n                </Row>\n            </Container>\n        );\n    }\n\n    render() {\n        let location = this.props.location;\n        let place = false;\n        if (location) {\n            if (location.state) {\n                if (location.state.place) {\n                    place = location.state.place;\n                }\n            }\n        }\n        if (this.state.done) {\n            let from = { pathname: '/mynearbyplaces'};\n            return (<Redirect to={from}/>);\n        }\n        return (\n            <Container>\n                {place ? this.reviewForm(place) : ''}\n            </Container>\n        );\n    }\n}\n\nexport default AddReview;","import React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './Components/Home.js';\nimport AddPlace from './Components/AddPlace.js';\nimport AddReview from './Components/AddReview.js'\nimport './App.css';\n\nfunction App() {\n  return (\n     <BrowserRouter>\n      <Switch>\n        <Route exact path='/mynearbyplaces/' render={props => <Home {...props}/>}/>\n        <Route path='/addplace'>\n          <AddPlace />\n        </Route>\n        <Route path='/addreview' render={props => <AddReview {...props}/>}/>\n      </Switch>\n     </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}