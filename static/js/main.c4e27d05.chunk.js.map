{"version":3,"sources":["ServerInterface/data.js","ServerInterface/server.js","Components/Home.js","Components/AddPlace.js","Components/AddReview.js","App.js","reportWebVitals.js","index.js"],"names":["places","name","category","city","state","reviews","server","addPlace","newPlace","push","getPlaces","removePlace","place","index","indexOf","splice","addReview","review","Home","props","searchSubmit","event","data","searchType","searchTerm","results","forEach","setState","entered","onOptionChange","val","target","value","preventDefault","onSearchChange","removeEntry","p","e","slice","console","log","body","Container","className","Row","Form","Group","Control","as","size","selector","onChange","type","placeholder","Button","onClick","renderResults","Col","length","map","i","r","x","variant","this","to","pathname","React","Component","AddPlace","onSubmit","done","onCancel","onInputChange","id","inputform","controlId","Label","AddReview","reviewForm","rows","location","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4e27d05.chunk.js","sourcesContent":["let places = [{name: 'Upper Crust', category: 'Restaurant', city: 'Tucson', state: 'Arizona', reviews: [\"very good!\", \"I like it alot\"]}, \n              {name: \"G's\", category: 'Barber', city: 'Tucson', state: 'Arizona', reviews: []},\n              {name: \"Frankie's\", category: 'Restaurant', city: 'Phoenix', state: 'Arizona', reviews: []},\n              {name: 'Guadalajara', category: 'Restaurant', city: 'Tucson', state: 'Arizona', reviews: []},\n              {name: 'Fuku Sushi', category: 'Restaurant', city: 'Tucson', state: 'Arizona', reviews: []}];\nexport default places;","import places from './data.js';\n\nlet addPlace = (name, category, city, state) => {\n    let newPlace = {name: name, category: category, city: city, state: state, reviews: []};\n    places.push(newPlace);\n}\nlet getPlaces = () => {\n    return places;\n}\nlet removePlace = (place) => {\n    let index = places.indexOf(place);\n    places.splice(index, 1)\n}\nlet addReview = (place, review) => {\n    let index = places.indexOf(place);\n    places[index].reviews.push(review);\n}\nlet server = {addPlace: addPlace, getPlaces: getPlaces, removePlace: removePlace, addReview: addReview};\n\nexport default server;","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport server from '../ServerInterface/server.js'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nimport './Home.css';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            results: [],\n            searchType: 'city',\n            searchTerm: '',\n            entered: false,\n            review: false,\n            place: ''\n        };\n    }\n\n    searchSubmit = (event) => {\n        let { data, searchType, searchTerm } = this.state;\n        let results = [];\n        data.forEach(place => {\n            if (searchType === 'city') {\n                if (place.city === searchTerm) {\n                    results.push(place);\n                }\n            } else if (searchType === 'name') {\n                if (place.name === searchTerm) {\n                    results.push(place);\n                }\n            }\n        });\n        this.setState({ results: results, entered: true });\n    }\n\n    onOptionChange = (event) => {\n        let val = event.target.value;\n        this.setState({ searchType: val });\n        event.preventDefault();\n    }\n\n    onSearchChange = (event) => {\n        let val = event.target.value;\n        this.setState({ searchTerm: val });\n        event.preventDefault();\n    }\n\n    removeEntry = (p, e) => {\n        this.state.results.slice(this.state.results.indexOf(p), 1);\n        server.removePlace(p);\n        this.searchSubmit();\n        console.log(this.state.data);\n    }\n\n    addReview = (p, e) => {\n        this.setState({review: true, place: p});\n    }\n\n    body = () => {\n        return (\n            <Container className='search'>\n                <Row>\n                    <Form.Group>\n                        <Form.Control as=\"select\" size=\"lg\" value={this.state.selector} onChange={this.onOptionChange}>\n                            <option value='city'>City</option>\n                            <option value='name'>Name</option>\n                        </Form.Control>\n                        <Form.Control type=\"text\" placeholder=\"search...\" value={this.state.searchTerm}\n                            onChange={this.onSearchChange} />\n                        <Button as='input' type='submit' value='Submit' onClick={this.searchSubmit} />\n                    </Form.Group>\n                </Row>\n            </Container>\n        );\n    }\n\n    renderResults = () => {\n        let { results } = this.state;\n        return (\n            <Container className='result'>\n                <Col>\n                    {results.length > 0 ?\n                        <Container>\n                            {results.map((p, i) =>\n                                <Container key={i} className='resultbox'>\n                                    <label>{(i + 1) + ': ' + p.name}</label>\n                                    <br />\n                                    <label>{p.city + \", \" + p.state}</label>\n                                    <br />\n                                    <label>{p.category}</label>\n                                    <br />\n                                    {p.reviews.length > 0 ?\n                                        <Container>\n                                            <label>Reviews:</label>\n                                            <br />\n                                            <Container>\n                                                {p.reviews.map((r, x) =>\n                                                    <Container className='reviews' key={x}>\n                                                        <label>{'    \"' + r + '\"'}</label>\n                                                        <br />\n                                                    </Container>\n                                                )}\n                                            </Container>\n                                        </Container>\n                                        : ''}\n                                    <Row className='buttons'>\n                                        <Button variant='danger' onClick={(e) => this.removeEntry(p, e)}>Remove</Button>\n                                        <Button variant='primary' onClick={(e) => this.addReview(p, e)}>Add Review</Button>\n                                    </Row>\n                                </Container>\n                            )}\n                        </Container>\n                        : 'Sorry, no results for that search'}\n                </Col>\n            </Container>\n        );\n    }\n\n    componentDidMount() {\n        let data = server.getPlaces();\n        this.setState({ data: data });\n\n    }\n\n    render() {\n        let { review, place } = this.state;\n        if (review) {\n            return (<Redirect to={{pathname: \"/addreview\", state: {place: place}}} />);\n        }\n        return (\n            <Container>\n                <Container className=\"addplace\">\n                    <Link to=\"/addplace\">Add Company</Link>\n                </Container>\n                <Container className='welcome'>\n                    <Container className='near'>Welcome to mynearbyplaces!</Container>\n                    {this.body()}\n                    {this.state.entered ? this.renderResults() : ''}\n                </Container>\n            </Container>\n        )\n    }\n\n}\n\nexport default Home;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport server from '../ServerInterface/server.js'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport  \"./AddPlace.css\";\n\nclass AddPlace extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            category: '',\n            city: '',\n            state: '',\n            done: false\n        };\n    }\n\n    onSubmit = (event) => {\n        let { name, category, city, state } = this.state;\n        server.addPlace(name, category, city, state);\n        event.preventDefault();\n        this.setState({done: true});\n    }\n\n    onCancel = (event) => {\n        event.preventDefault();\n        this.setState({done: true});\n    }\n\n    componentDidMount() {\n        let data = server.getPlaces();\n        this.setState({ data: data });\n    }\n\n    onInputChange = (event) => {\n        let value = event.target.value;\n        let name = event.target.id;\n        this.setState({[name]: value});\n    }\n\n    inputform = () => {\n        return (\n            <Container className='addform'>\n                <Row>\n                    <Col><Form>\n                        <label className='title'>Add a Business</label>\n                        <Form.Group controlId=\"name\">\n                            <Form.Label>Name:</Form.Label>\n                            <Form.Control size=\"lg\" type=\"text\" value={this.state.name}\n                                onChange={this.onInputChange} placeholder=\"Enter Name\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"category\">\n                            <Form.Label>Category:</Form.Label>\n                            <Form.Control size=\"lg\" type=\"text\" value={this.state.category}\n                                onChange={this.onInputChange} placeholder=\"Enter Category\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"city\">\n                            <Form.Label>City:</Form.Label>\n                            <Form.Control size=\"lg\" type=\"text\" value={this.state.city}\n                                onChange={this.onInputChange} placeholder=\"Enter City\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"state\">\n                            <Form.Label>State:</Form.Label>\n                            <Form.Control size=\"lg\" type=\"text\" value={this.state.state}\n                                onChange={this.onInputChange} placeholder=\"Enter State\"/>\n                        </Form.Group>\n                        <Row className='buttons'>\n                            <Button variant=\"secondary\" onClick={this.onCancel}>Cancel</Button>\n                            <Button variant=\"primary\" onClick={this.onSubmit}>Add Business</Button>\n                        </Row>\n                    </Form></Col>\n                </Row>\n            </Container>\n        );\n    }\n\n    render() {\n        let from = { pathname: '/mynearbyplaces'};\n        if (this.state.done) {\n            return (<Redirect to={from}/>);\n        }\n        return (\n                this.inputform()\n        );\n    }\n\n}\n\nexport default AddPlace;","import React from 'react';\nimport {  Redirect } from 'react-router-dom';\nimport server from '../ServerInterface/server.js'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './AddReview.css'\n\nclass AddReview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            entered: false,\n            review: ''\n        };\n    }\n\n    onSubmit = (place, event) => {\n        let { review } = this.state;\n        server.addReview(place, review);\n        event.preventDefault();\n        this.setState({done: true});\n    }\n\n    onCancel = (event) => {\n        event.preventDefault();\n        this.setState({done: true});\n    }\n\n    onInputChange = (event) => {\n        let value = event.target.value;\n        this.setState({review: value});\n    }\n\n    reviewForm = (place) => {\n        return (\n            <Container className='addform'>\n                <Row>\n                    <Col><Form>\n                        <label>Enter a review for {place.name}</label>\n                        <Form.Group controlId=\"review\">\n                        <Form.Control className='textfield' as=\"textarea\" rows={3} value={this.state.review}\n                                onChange={this.onInputChange} placeholder=\"Enter Review...\"/>\n                        </Form.Group>\n\n                        <Row className='buttons'>\n                            <Button variant=\"secondary\" onClick={this.onCancel}>Cancel</Button>\n                            <Button variant=\"primary\" onClick={(e) => this.onSubmit(place, e)}>Add Review</Button>\n                        </Row>\n                    </Form></Col>\n                </Row>\n            </Container>\n        );\n    }\n\n    render() {\n        let location = this.props.location;\n        let place = false;\n        if (location) {\n            if (location.state) {\n                if (location.state.place) {\n                    place = location.state.place;\n                }\n            }\n        }\n        if (this.state.done) {\n            let from = { pathname: '/mynearbyplaces'};\n            return (<Redirect to={from}/>);\n        }\n        return (\n            <Container>\n                {place ? this.reviewForm(place) : ''}\n            </Container>\n        );\n    }\n}\n\nexport default AddReview;","import React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './Components/Home.js';\nimport AddPlace from './Components/AddPlace.js';\nimport AddReview from './Components/AddReview.js'\nimport './App.css';\n\nfunction App() {\n  return (\n     <BrowserRouter>\n      <Switch>\n        <Route exact path='/mynearbyplaces/' render={props => <Home {...props}/>}/>\n        <Route path='/addplace'>\n          <AddPlace />\n        </Route>\n        <Route path='/addreview' render={props => <AddReview {...props}/>}/>\n      </Switch>\n     </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}